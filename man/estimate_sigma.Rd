% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_sigma.R
\name{estimate_sigma}
\alias{estimate_sigma}
\title{Estimate the Sigma Parameter for Regression Discontinuity Designs with a Mismeasured Running Variable}
\usage{
estimate_sigma(d_vec, w_vec, cutoff, lower = FALSE, init_sigma = NULL,
  method = c("tsgauss", "emparam"), x_dist = c("gauss"),
  u_dist = c("gauss", "lap"), ...)
}
\arguments{
\item{d_vec}{binary integer vector of treetment assingment}

\item{w_vec}{numeric vector of observed running variable}

\item{cutoff}{threshold value for assignment}

\item{lower}{if TRUE, then those with \code{x < cutoff} are assigned (i.e. d = 1).
Otherwise those with \code{x > cutoff} are assigned.}

\item{init_sigma}{initial value of sigma. If NULL (default), randomly chosen}

\item{method}{character specifying the estimating method.
\code{"tsgauss"} and \code{"emparam"} are supported}

\item{x_dist}{distribution of the true running variable.
Used only when \code{method} is \code{"emparam"}.
Currently, only "gauss" is supported.}

\item{u_dist}{distribution of the measurement error.
Used only when \code{method} is \code{"emparam"}.
Currently, \code{"gauss"} and \code{"lap"} are supported}

\item{...}{additional controls. See \code{\link{tsgauss}} or \code{\link{emparam}}}
}
\value{
object of \code{rddsigma} class
}
\description{
This function provides a high level API for estimating the sigma parameter
(the standard deviation of the measurement error in running variables of
sharp regression discontinuity designs).
}
\details{
The method \code{"tsgauss"} estimates the sigma parameter under the
assumption that the true running variable and the measurement error are Gaussian.
The method \code{"emparam"} relaxes this assumption and allows them to follow
some parametric distributions.  Currently, this function supports the Gaussian
distribution for the running variable and the Gaussian and Laplace distributions
for the measurement error.
}
\examples{
\dontrun{
set.seed(123)
dat <- gen_data(500, 0.2, 0)

# gaussian-gaussian model
estimate_sigma(dat$d, dat$w, 0, method="tsgauss")

# em algorithm estimator with parameteric assumptions
estimate_sigma(dat$d, dat$w, 0, method="emparam",
               x_dist="gauss", u_dist="gauss", verbose=TRUE)
estimate_sigma(dat$d, dat$w, 0, method="emparam",
               x_dist="gauss", u_dist="lap", verbose=TRUE)

# experiment with lower=TRUE
dat <- gen_data(500, 0.5, 1, lower=TRUE)

estimate_sigma(dat$d, dat$w, 1, lower=TRUE, method="tsgauss")

estimate_sigma(dat$d, dat$w, 1, lower=TRUE, method="emparam",
               x_dist="gauss", u_dist="gauss", verbose=TRUE)
estimate_sigma(dat$d, dat$w, 1, lower=TRUE, method="emparam",
               x_dist="gauss", u_dist="lap", verbose=TRUE)
}
}
